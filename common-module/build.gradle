import ejiayou.composing.builds.AndroidX
import ejiayou.composing.builds.Google
import ejiayou.composing.builds.ThirdLib
import ejiayou.composing.builds.Testing

plugins {
    id 'com.android.library'
    id 'ejiayou.composing.builds'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'maven-publish'
    id 'kotlin-kapt'

}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'ejiayou.common.module'
                artifactId = 'common'
                version = '1.0.0'
            }
        }
    }
}
android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"
        //阿里路由
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

dependencies {
    implementation 'com.github.nearbyren:ensd-uikit:1.1.2'
    testImplementation Testing.jUnit
    androidTestImplementation Testing.androidJunit
    androidTestImplementation Testing.espresso
    implementation AndroidX.multidex
    implementation AndroidX.coreKtx
    implementation ThirdLib.KotlinStdlib.kotlinStdlib
    implementation AndroidX.Navigation.kotCorAnd
    implementation AndroidX.Lifecycle.lcyExt
    implementation AndroidX.recyclerView
    implementation AndroidX.exifinterface
    implementation ThirdLib.MmkvStatic.mmkvStatic
    implementation ThirdLib.Relinker.relinker
    implementation ThirdLib.Easypermissions.easypermissions
    implementation ThirdLib.Arouter.arouterApi
    kapt ThirdLib.Arouter.arouterCompiler
    implementation ThirdLib.Lottie.lottie
    implementation Google.gson
    implementation AndroidX.appcompat
    implementation ThirdLib.Okhttp3.retrofit
    implementation ThirdLib.Okhttp3.converterCalars
    implementation ThirdLib.Okhttp3.retrofitConverterGson
    implementation ThirdLib.Okhttp3.adapterRxjava
    implementation ThirdLib.Okhttp3.adapterRxjava2
    implementation ThirdLib.Okhttp3.okhttp3

}

configurations.all { //循环一个个的依赖库
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested //获取当前循环到的依赖库
//        println("vale ="+requested)
//        println("vale 2 ="+requested.name)
        if (requested.group == 'com.android.support') {//如果这个依赖库群组的名字是com.android.support
            if (!requested.name.startsWith("multidex")) { //且其名字不是以multidex开头的
                details.useVersion '28.0.0'//这里指定需要统一的依赖版本
            }
        }
        if (requested.group == 'androidx.annotation:annotation:1.0.0') {
            //如果这个依赖库群组的名字是com.android.support
            details.useVersion '1.1.0'//这里指定需要统一的依赖版本
        }
    }
}